@model Application.DTOs.PackageManagement.CreatePackageViewModel
@{
    ViewData["Title"] = "Edit Package";
}

<style>
    .edit-container {
        min-height: calc(100vh - 180px);
        background: linear-gradient(135deg, #e3f2fd 0%, #f3e5f5 50%, #fce4ec 100%);
        padding: 2rem 1rem;
    }

    .form-card {
        background: rgba(255, 255, 255, 0.95);
        border-radius: 1rem;
        padding: 1.5rem;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }

    .form-section {
        margin-bottom: 2rem;
        padding-bottom: 2rem;
        border-bottom: 1px solid #e9ecef;
    }

    .form-section:last-child {
        margin-bottom: 0;
        padding-bottom: 0;
        border-bottom: none;
    }

    .section-title {
        color: #1976d2;
        font-size: 1.25rem;
        font-weight: 600;
        margin-bottom: 1.5rem;
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    .form-floating {
        margin-bottom: 1rem;
    }

    .form-control, .form-select {
        border: 2px solid #e0e0e0;
        border-radius: 0.5rem;
        transition: all 0.3s ease;
    }

    .form-control:focus, .form-select:focus {
        border-color: #1976d2;
        box-shadow: 0 0 0 0.2rem rgba(25, 118, 210, 0.25);
    }

    .products-container {
        background: #f8f9fa;
        padding: 1.5rem;
        border-radius: 0.5rem;
        margin-bottom: 1rem;
    }

    .product-input-group {
        position: relative;
        margin-bottom: 1rem;
    }

    .remove-product-btn {
        background: #ffebee;
        color: #c62828;
        border: none;
        border-radius: 0.5rem;
        padding: 0.5rem;
        transition: all 0.3s ease;
        display: inline-flex;
        align-items: center;
        justify-content: center;
    }

    .remove-product-btn:hover {
        background: #ffcdd2;
    }

    .add-product-btn {
        background: #e3f2fd;
        color: #1976d2;
        border: none;
        border-radius: 0.5rem;
        padding: 0.75rem 1.5rem;
        font-weight: 500;
        transition: all 0.3s ease;
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
    }

    .add-product-btn:hover {
        background: #bbdefb;
        transform: translateY(-2px);
    }

    .action-buttons {
        display: flex;
        gap: 1rem;
        margin-top: 2rem;
    }

    .submit-btn {
        background: linear-gradient(135deg, #2196f3, #1976d2);
        color: white;
        border: none;
        border-radius: 0.5rem;
        padding: 0.75rem 2rem;
        font-weight: 500;
        transition: all 0.3s ease;
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
    }

    .submit-btn:hover {
        transform: translateY(-2px);
        opacity: 0.9;
    }

    .cancel-btn {
        background: #e0e0e0;
        color: #333;
        border: none;
        border-radius: 0.5rem;
        padding: 0.75rem 2rem;
        font-weight: 500;
        transition: all 0.3s ease;
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        text-decoration: none;
    }

    .cancel-btn:hover {
        background: #d5d5d5;
        color: #333;
        transform: translateY(-2px);
    }

    .validation-summary {
        background: #ffebee;
        border-radius: 0.5rem;
        padding: 1rem;
        margin-bottom: 2rem;
    }

    .validation-summary ul {
        margin: 0;
        padding-left: 1.5rem;
    }
</style>

<div class="edit-container">
    <div class="container">
        <h1 class="text-center mb-4">Edit Package</h1>

        <div class="form-card">
            <form asp-action="Edit" method="post" id="editPackageForm">
                @if (!ViewContext.ModelState.IsValid)
                {
                    <div class="validation-summary">
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    </div>
                }

                <input type="hidden" name="id" value="@ViewBag.PackageId" />

                <!-- Basic Info -->
                <div class="form-section">
                    <h5 class="section-title">
                        <i class="bi bi-info-circle"></i>
                        Basic Information
                    </h5>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-floating">
                                <input asp-for="Name" class="form-control" placeholder="Package Name"/>
                                <label asp-for="Name">Package Name</label>
                                <span asp-validation-for="Name" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-floating">
                                <select asp-for="MealType"
                                        asp-items="Html.GetEnumSelectList<Domain.Enums.MealType>()"
                                        class="form-select">
                                    <option value="">Select Type</option>
                                </select>
                                <label asp-for="MealType">Meal Type</label>
                                <span asp-validation-for="MealType" class="text-danger"></span>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Location -->
                <div class="form-section">
                    <h5 class="section-title">
                        <i class="bi bi-geo-alt"></i>
                        Location Details
                    </h5>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-floating">
                                <input type="text" class="form-control"
                                       value='@(ViewBag.CityName ?? "Unknown City")'
                                       disabled />
                                <label>City</label>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-floating">
                                <input type="text" class="form-control"
                                       value='@(ViewBag.CafeteriaLocationName ?? "Unknown Cafeteria")'
                                       disabled />
                                <label>Cafeteria Location</label>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Timing & Price -->
                <div class="form-section">
                    <h5 class="section-title">
                        <i class="bi bi-clock"></i>
                        Timing & Price
                    </h5>
                    <div class="row">
                        <div class="col-md-4">
                            <div class="form-floating">
                                <input asp-for="PickupDateTime" class="form-control" type="datetime-local"/>
                                <label asp-for="PickupDateTime">Pickup Time</label>
                                <span asp-validation-for="PickupDateTime" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-floating">
                                <input asp-for="LastReservationDateTime" class="form-control" type="datetime-local"/>
                                <label asp-for="LastReservationDateTime">Last Reservation Time</label>
                                <span asp-validation-for="LastReservationDateTime" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-floating">
                                <div class="input-group">
                                    <span class="input-group-text">â‚¬</span>
                                    <input asp-for="Price" class="form-control" type="number" step="0.01" min="0.01"/>
                                </div>
                                <span asp-validation-for="Price" class="text-danger"></span>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Products -->
                <div class="form-section">
                    <h5 class="section-title">
                        <i class="bi bi-box"></i>
                        Products
                    </h5>
                    <div class="products-container">
                        <div id="productsContainer">
                            @for (int i = 0; i < Model.ExampleProducts.Count; i++)
                            {
                                <div class="product-input-group">
                                    <div class="input-group">
                                        <input type="text" name="ExampleProducts[@i]" class="form-control product-input"
                                               value="@Model.ExampleProducts[i]"
                                               placeholder="Product name" required />
                                        <div class="form-check ms-2">
                                            <input type="checkbox" 
                                                   name="AlcoholicProducts" 
                                                   value="@Model.ExampleProducts[i]"
                                                   class="form-check-input alcoholic-check" 
                                                   id="alcoholic-@i"
                                                   @(Model.AlcoholicProducts?.Contains(Model.ExampleProducts[i]) == true ? "checked" : "") />
                                            <label class="form-check-label" for="alcoholic-@i">
                                                Contains Alcohol
                                            </label>
                                        </div>
                                        <button type="button" class="remove-product-btn">
                                            <i class="bi bi-trash"></i>
                                        </button>
                                    </div>
                                </div>
                            }
                        </div>
                        <div id="productsError" class="text-danger"></div>
                        <button type="button" class="add-product-btn mt-3" onclick="addProduct()">
                            <i class="bi bi-plus-circle"></i>
                            Add Product
                        </button>
                    </div>
                </div>

                <!-- Action Buttons -->
                <div class="action-buttons">
                    <button type="submit" class="submit-btn">
                        <i class="bi bi-check-circle"></i>
                        Save Changes
                    </button>
                    <a asp-action="Index" class="cancel-btn">
                        <i class="bi bi-x-circle"></i>
                        Cancel
                    </a>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
<partial name="_ValidationScriptsPartial" />
<script>
    let productIndex = @Model.ExampleProducts.Count;

    function validateProducts() {
        const inputs = document.querySelectorAll('.product-input');
        let isValid = true;
        const errorDiv = document.getElementById('productsError');
        errorDiv.textContent = '';

        inputs.forEach(input => {
            if (!input.value.trim()) {
                isValid = false;
                input.classList.add('is-invalid');
            } else {
                input.classList.remove('is-invalid');
            }
        });

        if (!isValid) {
            errorDiv.textContent = 'All product names are required.';
        }

        return isValid;
    }

    function addProduct() {
        const container = document.getElementById('productsContainer');
        const div = document.createElement('div');
        div.className = 'product-input-group';
        div.innerHTML = `
            <div class="input-group">
                <input type="text" name="ExampleProducts[${productIndex}]" 
                       class="form-control product-input"
                       placeholder="Product name" required />
                <div class="form-check ms-2">
                    <input type="checkbox" 
                           name="AlcoholicProducts" 
                           class="form-check-input alcoholic-check" 
                           id="alcoholic-${productIndex}" />
                    <label class="form-check-label" for="alcoholic-${productIndex}">
                        Contains Alcohol
                    </label>
                </div>
                <button type="button" class="remove-product-btn">
                    <i class="bi bi-trash"></i>
                </button>
            </div>
        `;
        
        container.appendChild(div);
        productIndex++;
        
        // Add event listeners
        const input = div.querySelector('.product-input');
        const checkbox = div.querySelector('.alcoholic-check');
        const removeButton = div.querySelector('.remove-product-btn');
        
        input.addEventListener('change', function() {
            checkbox.value = this.value;
        });
        
        removeButton.addEventListener('click', function() {
            removeProduct(this);
        });
        
        updateRemoveButtons();
    }

    function removeProduct(button) {
        const group = button.closest('.product-input-group');
        if (group) {
            group.remove();
            reindexProducts();
            updateRemoveButtons();
            validateProducts();
        }
    }

    function reindexProducts() {
        const inputs = document.querySelectorAll('.product-input');
        inputs.forEach((input, index) => {
            input.name = `ExampleProducts[${index}]`;
        });
        productIndex = inputs.length;
    }

    function updateRemoveButtons() {
        const buttons = document.querySelectorAll('.remove-product-btn');
        const showButtons = document.querySelectorAll('.product-input-group').length > 1;
        buttons.forEach(button => {
            button.style.display = showButtons ? 'block' : 'none';
        });
    }

    document.getElementById('editPackageForm').addEventListener('submit', function(e) {
        if (!validateProducts()) {
            e.preventDefault();
            return false;
        }
        return true;
    });

    // Initialize
    updateRemoveButtons();
    
    // Add change handlers to existing inputs
    document.querySelectorAll('.product-input').forEach(input => {
        input.addEventListener('change', function() {
            const checkbox = this.parentElement.querySelector('.alcoholic-check');
            checkbox.value = this.value;
        });
    });
    
    // Add click handlers to existing remove buttons
    document.querySelectorAll('.remove-product-btn').forEach(button => {
        button.addEventListener('click', function() {
            removeProduct(this);
        });
    });
</script>
}
