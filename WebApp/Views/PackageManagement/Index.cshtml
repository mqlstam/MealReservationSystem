@model Application.DTOs.PackageManagement.PackageListViewModel

@{
ViewData["Title"] = "Manage Packages";
bool showOnlyMyCafeteria = ViewData["ShowOnlyMyCafeteria"] as bool? ?? false;
}

<style>
    /* Add these styles to the existing <style> section */
    .modal-content {
        background: rgba(255, 255, 255, 0.98);
        border-radius: 1rem;
        border: none;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }

    .modal-header {
        border-bottom: 1px solid rgba(0, 0, 0, 0.1);
        padding: 1.5rem;
    }

    .modal-body {
        padding: 1.5rem;
    }

    .modal-footer {
        border-top: 1px solid rgba(0, 0, 0, 0.1);
        padding: 1.5rem;
    }

    .modal-title {
        color: #1976d2;
        font-weight: 600;
    }

    .modal .btn-secondary {
        background: #e0e0e0;
        border: none;
        color: #333;
        font-weight: 500;
        padding: 0.5rem 1.5rem;
        transition: all 0.3s ease;
    }

    .modal .btn-secondary:hover {
        background: #d5d5d5;
        transform: translateY(-1px);
    }

    .modal .btn-danger {
        background: linear-gradient(135deg, #ef5350, #d32f2f);
        border: none;
        font-weight: 500;
        padding: 0.5rem 1.5rem;
        transition: all 0.3s ease;
    }

    .modal .btn-danger:hover {
        opacity: 0.9;
        transform: translateY(-1px);
    }

    .modal-backdrop.show {
        opacity: 0.7;
    }
    .manage-container {
        min-height: calc(100vh - 180px);
        background: linear-gradient(135deg, #e3f2fd 0%, #f3e5f5 50%, #fce4ec 100%);
        padding: 2rem 1rem;
    }

    .create-btn {
        background: linear-gradient(135deg, #2196f3, #1976d2);
        border: none;
        border-radius: 0.5rem;
        padding: 0.75rem 1.5rem;
        color: white;
        font-weight: 500;
        transition: all 0.3s ease;
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
    }

    .create-btn:hover {
        transform: translateY(-2px);
        color: white;
        opacity: 0.9;
    }

    .filter-card {
        background: rgba(255, 255, 255, 0.95);
        border-radius: 1rem;
        padding: 1.5rem;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        margin-bottom: 2rem;
    }

    .table-card {
        background: rgba(255, 255, 255, 0.95);
        border-radius: 1rem;
        padding: 1.5rem;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        overflow-x: auto;
    }

    .custom-table {
        width: 100%;
        margin-bottom: 0;
    }

    .custom-table th {
        background: #f8f9fa;
        border-bottom: 2px solid #e9ecef;
        padding: 1rem;
        font-weight: 600;
        color: #1976d2;
    }

    .custom-table td {
        padding: 1rem;
        vertical-align: middle;
    }

    .custom-table tr {
        transition: all 0.2s ease;
    }

    .custom-table tr:hover {
        background: #f8f9fa;
    }

    .badge {
        padding: 0.5rem 1rem;
        border-radius: 2rem;
        font-weight: 500;
        font-size: 0.875rem;
    }

    .badge-success {
        background: #e8f5e9;
        color: #2e7d32;
    }

    .badge-warning {
        background: #fff3e0;
        color: #e65100;
    }

    .badge-danger {
        background: #ffebee;
        color: #c62828;
    }

    .badge-info {
        background: #e3f2fd;
        color: #1976d2;
    }

    .badge-secondary {
        background: #f5f5f5;
        color: #616161;
    }

    .btn-group {
        display: flex;
        gap: 0.5rem;
        flex-wrap: wrap;
    }

    .action-btn {
        padding: 0.5rem 1rem;
        border-radius: 0.5rem;
        font-size: 0.875rem;
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        gap: 0.25rem;
        transition: all 0.2s ease;
        border: none;
    }

    .btn-edit {
        background: #e3f2fd;
        color: #1976d2;
    }

    .btn-edit:hover {
        background: #bbdefb;
        color: #1976d2;
    }

    .btn-delete {
        background: #ffebee;
        color: #c62828;
    }

    .btn-delete:hover {
        background: #ffcdd2;
        color: #c62828;
    }

    .btn-pickup {
        background: #e8f5e9;
        color: #2e7d32;
    }

    .btn-pickup:hover {
        background: #c8e6c9;
        color: #2e7d32;
    }

    .btn-noshow {
        background: #fff3e0;
        color: #e65100;
    }

    .btn-noshow:hover {
        background: #ffe0b2;
        color: #e65100;
    }

    .alert {
        border-radius: 0.5rem;
        margin-bottom: 1rem;
    }
</style>

<div class="manage-container">
    <div class="container">
        <div class="d-flex justify-content-between align-items-center mb-4">
            <h1 class="mb-0">Manage Packages</h1>
            <a asp-action="Create" class="create-btn">
                <i class="bi bi-plus-circle"></i>
                Create New Package
            </a>
        </div>

        @if (TempData["Success"] != null)
        {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <i class="bi bi-check-circle me-2"></i>
            @TempData["Success"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
        }

        @if (TempData["Error"] != null)
        {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <i class="bi bi-exclamation-triangle me-2"></i>
            @TempData["Error"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
        }

        <div class="filter-card">
            <h5 class="mb-3">
                <i class="bi bi-funnel me-2"></i>Filter Options
            </h5>
            <form method="get" asp-action="Index">
                <div class="row g-3">
                    <div class="col-md-12">
                        <div class="form-check mb-3">
                            <input type="checkbox" class="form-check-input" id="showOnlyMyCafeteria"
                                   name="showOnlyMyCafeteria" value="true" @(showOnlyMyCafeteria ? "checked" : "")>
                            <label class="form-check-label" for="showOnlyMyCafeteria">
                                Show Only My Cafeteria
                            </label>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <label asp-for="CityFilter" class="form-label">City</label>
                        <select asp-for="CityFilter" asp-items="Html.GetEnumSelectList<Domain.Enums.City>()"
                                class="form-select">
                            <option value="">All Cities</option>
                        </select>
                    </div>
                    <div class="col-md-3">
                        <label asp-for="TypeFilter" class="form-label">Meal Type</label>
                        <select asp-for="TypeFilter" asp-items="Html.GetEnumSelectList<Domain.Enums.MealType>()"
                                class="form-select">
                            <option value="">All Types</option>
                        </select>
                    </div>
                    <div class="col-md-3">
                        <label class="form-label">Max Price</label>
                        <div class="input-group">
                            <span class="input-group-text">â‚¬</span>
                            <input name="maxPrice"
                                   type="number"
                                   step="0.01"
                                   min="0"
                                   class="form-control"
                                   value="@Model.MaxPriceFilter" />
                        </div>
                    </div>
                    <div class="col-md-3">
                        <label asp-for="ShowExpired" class="form-label">Show Expired</label>
                        <div class="form-check mt-2">
                            <input asp-for="ShowExpired" class="form-check-input" type="checkbox">
                            <label class="form-check-label" asp-for="ShowExpired">
                                Include expired packages
                            </label>
                        </div>
                    </div>
                    <div class="col-12">
                        <button type="submit" class="btn btn-primary me-2">
                            <i class="bi bi-search me-2"></i>Apply Filters
                        </button>
                    </div>
                </div>
            </form>
        </div>

        @if (!Model.Packages.Any())
        {
        <div class="alert alert-info">
            <i class="bi bi-info-circle me-2"></i>
            No packages found matching your criteria.
        </div>
        }
        else
        {
        <div class="table-card">
            <div class="table-responsive">
                <table class="table custom-table">
                    <thead>
                    <tr>
                        <th>Name</th>
                        <th>Type</th>
                        <th>Price</th>
                        <th>Pickup Time</th>
                        <th>Last Reservation</th>
                        <th>Status</th>
                        <th>Reserved By</th>
                        <th>Actions</th>
                    </tr>
                    </thead>
                    <tbody>
                    @foreach (var package in Model.Packages)
                    {
                    <tr>
                        <td>@package.Name</td>
                        <td>@package.MealType</td>
                        <td>@package.Price.ToString("C")</td>
                        <td>@package.PickupDateTime.ToString("g")</td>
                        <td>@package.LastReservationDateTime.ToString("g")</td>
                        <td>
                            @switch (package.Status)
                            {
                            case "No-Show":
                            <span class="badge badge-danger">No-Show</span>
                            break;
                            case "Picked Up":
                            <span class="badge badge-success">Picked Up</span>
                            break;
                            case "Expired":
                            <span class="badge badge-secondary">Expired</span>
                            break;
                            case "Reserved":
                            <span class="badge badge-warning">Reserved</span>
                            break;
                            default:
                            <span class="badge badge-info">Available</span>
                            break;
                            }
                        </td>
                        <td>
                            @(package.ReservedBy ?? "-")
                        </td>
                        <td>
                            <div class="btn-group">
                                @if (package.Status == "Available")
                                {
                                <a asp-action="Edit" asp-route-id="@package.Id"
                                   class="action-btn btn-edit">
                                    <i class="bi bi-pencil"></i>
                                    Edit
                                </a>
                                <button type="button" 
                                        class="action-btn btn-delete"
                                        onclick="showDeleteModal(@package.Id, '@package.Name.Replace("'", "\'")')">
                                    <i class="bi bi-trash"></i>
                                    Delete
                                </button>
                                }

                                @if (package.IsReserved && !package.IsPickedUp && !package.IsNoShow &&
                                package.PickupDateTime > DateTime.Now)
                                {
                                <form asp-action="MarkAsPickedUp" asp-route-id="@package.Id"
                                      method="post" class="d-inline">
                                    <button type="submit" class="action-btn btn-pickup">
                                        <i class="bi bi-check-circle"></i>
                                        Picked Up
                                    </button>
                                </form>
                                }

                                @if (package.IsReserved && !package.IsNoShow && !package.IsPickedUp &&
                                package.PickupDateTime < DateTime.Now)
                                {
                                <form asp-action="MarkAsNoShow" asp-route-id="@package.Id"
                                      method="post" class="d-inline">
                                    <button type="submit" class="action-btn btn-noshow">
                                        <i class="bi bi-x-circle"></i>
                                        Mark No-Show
                                    </button>
                                </form>
                                }

                                @if (package.IsNoShow)
                                {
                                <form asp-action="UndoNoShow" asp-route-id="@package.Id"
                                      method="post" class="d-inline">
                                    <button type="submit" class="action-btn btn-pickup">
                                        <i class="bi bi-arrow-counterclockwise"></i>
                                        Undo No-Show
                                    </button>
                                </form>
                                }
                            </div>
                        </td>
                    </tr>
                    }
                    </tbody>
                </table>
            </div>
        </div>
        }
        <div class="modal fade" id="deletePackageModal" tabindex="-1" aria-labelledby="deletePackageModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="deletePackageModalLabel">Delete Package</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <p class="mb-0">Are you sure you want to delete package <strong id="packageNameToDelete"></strong>?</p>
                        <p class="text-danger mb-0 mt-3">This action cannot be undone.</p>
                    </div>
                    <div class="modal-footer">
                        <form id="deletePackageForm" asp-action="DeleteConfirmed" method="post">
                            <input type="hidden" id="packageIdToDelete" name="id" value="" />
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                            <button type="submit" class="btn btn-danger">Delete Package</button>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    function showDeleteModal(packageId, packageName) {
        document.getElementById('packageIdToDelete').value = packageId;
        document.getElementById('packageNameToDelete').textContent = packageName;
        new bootstrap.Modal(document.getElementById('deletePackageModal')).show();
    }

    // Add success message auto-hide
    document.addEventListener('DOMContentLoaded', function() {
        setTimeout(function() {
            const alert = document.querySelector('.alert-success');
            if (alert) {
                const bsAlert = new bootstrap.Alert(alert);
                bsAlert.close();
            }
        }, 3000);
    });
</script>